text(x= -0.18, y=17, labels = "Obs.", cex=title_size_text, font=2, pos=4)
text(x= -0.13, y=17, labels = "Total conflict\nincidence/onset", cex=title_size_text, font=2, adj = c(0,0.1))
text(x= -0.33, y =Regression_name_pos, labels = Regression_labels, cex=figure_size_text, font=1, pos=4)
text(x= -0.18, y =Regression_name_pos, labels = Regression_Obs_nbr, cex=figure_size_text, font=1,pos=4)
text(x= -0.13, y =nn, labels =Inequality_on_conflict$Occurence, cex=figure_size_text, font=1,pos=4)
text(x= Inequality_on_conflict$beta, y=nn+0.25, labels= round(Inequality_on_conflict$beta, digits = 2), cex=marker_text_size, font=1, pos=4)
text(x= Inequality_on_conflict$beta+0.011, y=nn+0.3, labels= Inequality_on_conflict$statistical_level, cex=marker_text_size, font=1, pos=4)
#Including the legend
points(x=-0.32,y=0.2,pch=21,bg="White",cex=marker_size)
points(x=-0.32,y=-0.4,pch=21,bg="Black",cex=marker_size)
text(x= -0.32, y=0.2, labels= "Impact on conflict incidence", cex=figure_size_text, font=3, pos=4)
text(x= -0.32, y=-0.4, labels= "Impact on conflict onset", cex=figure_size_text, font=3, pos=4)
#save the first plot
inequality_plot <- recordPlot()
###Plotting the second figure and combining the figures ----
# make labels and margins smaller
par(cex=0.7, mai=c(0.05,0.05,0.05,0.05))
# define area of the left plot
par(fig=c(0.1,0.7,0.1,0.9))
inequality_plot
# define area for the second plot
par(fig=c(0.6,1,0,1), new=TRUE)
# draw the second plot
plot(1,type="n",xlim=c(-0.1,0.1),ylim=c(0,dim(Pre_on_conflict)[1]+2),axes=F,ylab="",xlab="")
#The title of the axis
mtext(side = 1, text = expression("                    Effect of a statndard deviation increase in rainfall"), line=2.5, cex = 0.8)
mtext(side = 1, text = "               relative to long-term regional average on armed conflicts", line=3, cex = 0.8)
#Insert vertical grid lines
abline(v=xx,lwd=0.5,col="grey",lty=2)
abline(v=0,lwd=0.5, col="red")
#Inserting the coefficients and the standard errors
segments(Pre_on_conflict$lo_c,nn,Pre_on_conflict$hi_c, nn, cex=marker_size, lwd = 2, col = "grey")
points(Pre_on_conflict$beta,nn,pch=21,bg=Pre_on_conflict$Color,cex=marker_size)
#setting subgroups in the graph and the axis grid
abline(h=lz,lwd=1,lty=1,col="grey") #with subgroup ordering
axis(1,at=seq(-0.05,0.1,0.025),labels=seq(-0.05,0.1,0.025), cex.axis=axis_size_text,line=0)
#Including the text on the left side of the graph
text(x= Pre_on_conflict$beta, y=nn+0.25, labels= round(Pre_on_conflict$beta, digits = 2), cex=marker_text_size, font=1, pos=4)
text(x= Pre_on_conflict$beta+0.011, y=nn+0.3, labels= Pre_on_conflict$statistical_level, cex=marker_text_size, font=1, pos=4)
## Setting the working directory -----
setwd("/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis")
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_annual/tifs/chirps-v2.0.",y,".tif", sep  = "")
destination <- paste("Input/Rainfall/chirps_",y,".tif", sep ="")
download.file(url = url, destfile = destination)
}
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_annual/tifs/chirps-v2.0.",y,".tif", sep  = "")
destination <- paste("Input/Rainfall/chirps_",y,".tif", sep ="")
download.file(url = url, destfile = destination)
}
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_annual/tifs/chirps-v2.0.",y,".tif", sep  = "")
destination <- paste("Input/Rainfall/chirps_",y,".tif", sep ="")
download.file(url = url, destfile = destination)
}
path <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif"
path_output <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif"
a = raster(path)
library(rstudioapi)
library(sp)
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library('sf')
library("terra")
library("R.utils")
a = raster(path)
a <- setMinMax(a)
path <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif"
path_output <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif"
a = raster(path)
a <- setMinMax(a)
a
a[a < 0] <- NA
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
path <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2021.tif"
path_output <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2021.tif"
a = raster(path)
a <- setMinMax(a)
a
a[a < 0] <- NA
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
path <- c("/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif", "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2021.tif")
## Definitions of variables ----
#Defining the list of rainfall data - Rainfall data source: https://chc.ucsb.edu/data
Grids_folder_input = "Input/Rainfall/"
Grids_folder_output = "Input/Rainfall/"
#Defining the population raster  - Population data source: https://sedac.ciesin.columbia.edu
#A registration on the website is necessary
path_pop <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Data from MAC CHRIPS precipitation/Population_SEDAC/Population.tif"
#Generating local variables
path_pre <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2020.tif"
path_output <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Rainfall/pop_weighted/chirps-v2.0.2020.tif"
Precpitation = raster(path_pre)
Pop = raster(path_pop)
#Defining the population raster  - Population data source: https://sedac.ciesin.columbia.edu
#A registration on the website is necessary
path_pop <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Data from MAC CHRIPS precipitation/Population_SEDAC/Population.tif"
Pop = raster(path_pop)
path_pop <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Rainfall/Population_SEDAC/Population.tif"
Pop = raster(path_pop)
#Multiplication
a = Precipitation * Pop
Precpitation = raster(path_pre)
#Multiplication
a = Precipitation * Pop
rm(Precpitation)
Precipitation = raster(path_pre)
#Multiplication
a = Precipitation * Pop
Precipitation
Pop
?resample
#Ressample population rasters
Pop <- resample(Pop, Precipitation, "bilinear")
#Ressample population rasters
extent(Pop) <- extent(Precipitation)
Pop
plo(Pop)
plot(Pop)
plot(Precipitation)
plot(Pop)
Pop = raster(path_pop)
plot(Pop)
Pop <- resample(Pop, Precipitation)
Pop <- raster::resample(Pop, Precipitation)
Pop
grids[1]
## Definitions of variables ----
#Defining the list of rainfall data - Rainfall data source: https://chc.ucsb.edu/data
Grids_folder_input = "Input/Rainfall/"
Grids_folder_output = "Temporary/Rainfall/"
## Redefining NA values of precipitation values ----
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
grids[1]
plot(Pop)
Precipitation = raster(path_pre)
#Multiplication
a = Precipitation * Pop
#Export the output
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
#Generating local variables
path_pre <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Rainfall/chirps-v2.0.2021.tif"
path_output <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Rainfall/pop_weighted/chirps-v2.0.2021.tif"
Precipitation = raster(path_pre)
#Multiplication
a = Precipitation * Pop
#Export the output
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
## Definitions of variables ----
#Defining the list of rainfall data - Rainfall data source: https://chc.ucsb.edu/data
Grids_folder_input = "Input/Rainfall/"
Grids_folder_output = "Temporary/Rainfall/Level/"
## Redefining NA values of precipitation values ----
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
for (i in grids) {
print(paste0("Working on ", i," in ", "Input/Rainfall/"))
print(paste0("Working on ", i," in ", "Temporary/Rainfall/Level/"))
#Generating local variables
# path <- paste0(Grids_folder_input,"/",i)
# path_output <- paste0(Grids_folder_output,"/",i)
# a = raster(path)
# a <- setMinMax(a)
# a
# a[a < 0] <- NA
# r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
grids <- list.files(Grids_folder_output, pattern = "*.tif$")
## Redefining NA values of precipitation values ----
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
## Redefining NA values of precipitation values ----
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
for (i in grids) {
print(paste0("Working on ", i," in ", "Input/Rainfall/"))
print(paste0("Working on ", i," in ", "Temporary/Rainfall/Level/"))
#Generating local variables
# path <- paste0(Grids_folder_input,"/",i)
# path_output <- paste0(Grids_folder_output,"/",i)
# a = raster(path)
# a <- setMinMax(a)
# a
# a[a < 0] <- NA
# r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
path <- "/Users/thierrycoulibaly/Downloads/chirps-v2.0.1981.01.tif"
a = raster(path)
a <- setMinMax(a)
a
a[a < 0] <- NA
a <- setMinMax(a)
a
plot(a)
getCHIRPS(
region = "global",
format = "tifs",
tres = "monthly",
sres = 0.05,
begin = as.Date("1989-01-01"),
end = as.Date("2021-12-01"),,
dsn = "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input",
overwrite = TRUE,
cores = 1L,
...
)
install.packages("chirps")
getCHIRPS(
region = "global",
format = "tifs",
tres = "monthly",
sres = 0.05,
begin = as.Date("1989-01-01"),
end = as.Date("2021-12-01"),,
dsn = "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input",
overwrite = TRUE,
cores = 1L,
...
)
library("chirps")
getCHIRPS(
region = "global",
format = "tifs",
tres = "monthly",
sres = 0.05,
begin = as.Date("1989-01-01"),
end = as.Date("2021-12-01"),,
dsn = "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input",
overwrite = TRUE,
cores = 1L,
...
)
?get_chirps
get_chirps(
region = "global",
format = "tifs",
tres = "monthly",
sres = 0.05,
begin = as.Date("1989-01-01"),
end = as.Date("2021-12-01"),,
dsn = "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input",
overwrite = TRUE,
cores = 1L,
...
)
get_chirps(
region = "global",
format = "tifs",
tres = "monthly",
sres = 0.05,
begin = as.Date("1989-01-01"),
end = as.Date("2021-12-01"),,
dsn = "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input",
overwrite = TRUE,
cores = 1L
)
for (y in 1989:2021){
for (m in 1:12){
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination <- paste("Input/Rainfall/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination)
}
}
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
m <- as.character(m)
print(m)
# url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
# destination <- paste("Input/Rainfall/chirps_",y,"_",m,".tif", sep ="")
# download.file(url = url, destfile = destination)
}
}
# m <- as.character(m)
m <- formatC(m, width=3, flag="0")
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
# m <- as.character(m)
m <- formatC(m, width=3, flag="0")
print(m)
# url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
# destination <- paste("Input/Rainfall/chirps_",y,"_",m,".tif", sep ="")
# download.file(url = url, destfile = destination)
}
}
# m <- as.character(m)
m <- formatC(m, width=2, flag="0")
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
# m <- as.character(m)
m <- formatC(m, width=2, flag="0")
print(m)
# url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
# destination <- paste("Input/Rainfall/chirps_",y,"_",m,".tif", sep ="")
# download.file(url = url, destfile = destination)
}
}
getwd()
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination)
}
}
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 2016:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination)
}
}
test <- raster("/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Monthly_rainfall_CHIRPS/chirps_1989_09.tif")
zipF<- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/Monthly_rainfall_CHIRPS/chirps_1989_09.tif"
outDir<-"/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/test.tif"
unzip(zipF,exdir=outDir)
destination
test <- raster("destination")
zipF<- destination
gunzip(destination) #unzip tif files
## Downloading rainfall data ----
#Data download: https://data.chc.ucsb.edu/products/CHIRPS-2.0/africa_monthly/tifs/
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination)
gunzip(destination)
}
}
?gunzip
gunzip(destination, overwrite = TRUE)
gunzip(destination,destination, overwrite = TRUE)
gunzip(destination,"/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Input/test.tif", overwrite = TRUE)
unlink(destination)
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 1989:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination_zip <- paste("Input/Monthly_rainfall_CHIRPS/zip_",y,"_",m,".tif", sep ="")
destination_tif <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination)
gunzip(destination_zip, destination_tif, overwrite=TRUE)
unlink(destination_zip)
}
}
for (y in 1989:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination_zip <- paste("Input/Monthly_rainfall_CHIRPS/zip_",y,"_",m,".tif", sep ="")
destination_tif <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination_zip)
gunzip(destination_zip, destination_tif, overwrite=TRUE)
unlink(destination_zip)
}
}
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 2000:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination_zip <- paste("Input/Monthly_rainfall_CHIRPS/zip_",y,"_",m,".tif", sep ="")
destination_tif <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination_zip)
gunzip(destination_zip, destination_tif, overwrite=TRUE)
unlink(destination_zip)
}
}
for (y in 2016:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination_zip <- paste("Input/Monthly_rainfall_CHIRPS/zip_",y,"_",m,".tif", sep ="")
destination_tif <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination_zip)
gunzip(destination_zip, destination_tif, overwrite=TRUE)
unlink(destination_zip)
}
}
#Accompanying paper: https://www.nature.com/articles/sdata201566
for (y in 2016:2021){
for (m in 1:12){
m <- formatC(m, width=2, flag="0")
url <- paste("https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/tifs/chirps-v2.0.",y,".",m,".tif.gz", sep  = "")
destination_zip <- paste("Input/Monthly_rainfall_CHIRPS/zip_",y,"_",m,".tif", sep ="")
destination_tif <- paste("Input/Monthly_rainfall_CHIRPS/chirps_",y,"_",m,".tif", sep ="")
download.file(url = url, destfile = destination_zip)
gunzip(destination_zip, destination_tif, overwrite=TRUE)
unlink(destination_zip)
}
}
## Redefining NA values of precipitation values ----
Grids_folder_input = "Input/Monthly_rainfall_CHIRPS"
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
for (i in grids) {
print(paste0("Working on ", i," in ", "Input/Rainfall/"))
print(paste0("Working on ", i," in ", "Temporary/Rainfall/Level/"))
#Generating local variables
path <- paste0(Grids_folder_input,"/",i)
path_output <- paste0(Grids_folder_output,"/",i)
a = raster(path)
a <- setMinMax(a)
a
a[a < 0] <- NA
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
## Redefining NA values of precipitation values ----
Grids_folder_input = "Input/Monthly_rainfall_CHIRPS"
grids <- list.files(Grids_folder_input, pattern = "*.tif$")
for (i in grids) {
print(paste0("Working on ", i," in ", "Input/Rainfall/"))
print(paste0("Working on ", i," in ", "Temporary/Rainfall/Level/"))
#Generating local variables
path <- paste0(Grids_folder_input,"/",i)
path_output <- paste0(Grids_folder_output,"/",i)
a = raster(path)
a <- setMinMax(a)
a
a[a < 0] <- NA
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
plot(Pop)
for (i in grids) {
print(paste0("Working on ", i))
#Generating local variables
path_pre <- paste0(Grids_folder_output,"/",i)
path_output <- paste0(Grids_folder_output,"/pop_weighted/",i)
Precipitation = raster(path_pre)
Pop = raster(path_pop)
#Multiplication
a = Precipitation * Pop
#Export the output
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
path_pop <- "/Users/thierrycoulibaly/Desktop/Armed_conflicts/Analysis/Temporary/Rainfall/Population_SEDAC/Population.tif"
## Multiplying precipitation rasters with the population raster -----
#Resample population rasters
Pop <- raster(path_pop)
Pop <- raster::resample(Pop, paste0(Grids_folder_output,"/",grids[1]))
Pop <- raster::resample(Pop, paste0(Grids_folder_output,"/",grids[1]))
?raster::resample
print(paste0(Grids_folder_output,"/",grids[1]))
Pop <- raster::resample(Pop, paste0(Grids_folder_output,grids[1]))
plot(grids[1])
plot(rasrter(grids[1]))
resamble_grid <- rasrter(paste0(Grids_folder_output,"/",grids[1]))
resamble_grid <- raster(paste0(Grids_folder_output,"/",grids[1]))
Pop <- raster::resample(Pop, resamble_grid)
rm(resamble_grid)
for (i in grids) {
print(paste0("Working on ", i))
#Generating local variables
path_pre <- paste0(Grids_folder_output,"/",i)
path_output <- paste0(Grids_folder_output,"/pop_weighted/",i)
Precipitation = raster(path_pre)
Pop = raster(path_pop)
#Multiplication
a = Precipitation * Pop
#Export the output
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
Grids_folder_output
rm(destination, destination_tif, destination_zip)
rm(i, m, outDir)
rm(url, zipF, y)
plot(r)
rm(r)
Grids_folder_output
Grids_pop_weghted <- "Temporary/Rainfall/pop_weighted"
Grids_pop_weghted <- "Temporary/Rainfall"
Pop <- raster::resample(Pop, resamble_grid)
Pop <- raster(path_pop)
resamble_grid <- raster(paste0(Grids_folder_output,"/",grids[1]))
Pop <- raster::resample(Pop, resamble_grid)
rm(resamble_grid, path_pop)
Grids_pop_weighted <- "Temporary/Rainfall"
for (i in grids) {
print(paste0("Working on ", i))
path_pre <- paste0(Grids_folder_output,"/",i)
#Generating local variables
path_output <- paste0(Grids_pop_weighted,"/pop_weighted/",i)
Precipitation = raster(path_pre)
#Multiplication
a = Precipitation * Pop
#Export the output
r <- terra::writeRaster(a, path_output, format="GTiff", overwrite=TRUE)
}
